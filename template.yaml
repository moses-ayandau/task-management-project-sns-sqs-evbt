AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Task Management System with User Management, Tasks, SQS and SNS integration

Resources:
  # DynamoDB Tables
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Tasks
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: assignedTo
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: AssignedToIndex
          KeySchema:
            - AttributeName: assignedTo
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # SNS Topics
  TaskAssignmentNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: TaskAssignmentNotificationTopic
      DisplayName: Task Assignment Notification

  TaskDeadlineNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: TaskDeadlineNotificationTopic
      DisplayName: Task Deadline Notification

  ClosedTaskNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: ClosedTaskNotificationTopic
      DisplayName: Closed Task Notification

  TaskCompleteNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: TaskCompleteNotificationTopic
      DisplayName: Task Complete Notification

  # SQS Queues
  TaskAssignmentQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: TaskAssignmentQueue.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TaskAssignmentDLQ.Arn
        maxReceiveCount: 3

  TaskAssignmentDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: TaskAssignmentDLQ.fifo
      FifoQueue: true
      ContentBasedDeduplication: true

  ExpiredTasksQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ExpiredTasksQueue
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ExpiredTasksDLQ.Arn
        maxReceiveCount: 3

  ExpiredTasksDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ExpiredTasksDLQ

  # Step Functions
  UserOnboardingStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachines/user-onboarding.asl.json
      DefinitionSubstitutions:
        TaskAssignmentNotificationTopicArn: !Ref TaskAssignmentNotificationTopic
        TaskDeadlineNotificationTopicArn: !Ref TaskDeadlineNotificationTopic
        ClosedTaskNotificationTopicArn: !Ref ClosedTaskNotificationTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt TaskAssignmentNotificationTopic.TopicName
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt TaskDeadlineNotificationTopic.TopicName
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ClosedTaskNotificationTopic.TopicName

  TaskExpirationStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachines/task-expiration.asl.json
      DefinitionSubstitutions:
        UsersTableName: !Ref UsersTable
        TasksTableName: !Ref TasksTable
        ClosedTaskNotificationTopicArn: !Ref ClosedTaskNotificationTopic
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ClosedTaskNotificationTopic.TopicName

  # Lambda Functions
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction/
      Handler: helloworld.UserSignupHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
          USER_ONBOARDING_STEP_FUNCTION_ARN: !GetAtt UserOnboardingStepFunction.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt UserOnboardingStepFunction.Name

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction/
      Handler: helloworld.TaskCreationHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
          TASK_ASSIGNMENT_QUEUE_URL: !Ref TaskAssignmentQueue
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TaskAssignmentQueue.QueueName

  ProcessTaskAssignmentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction/
      Handler: helloworld.TaskAssignmentHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
          TASKS_TABLE: !Ref TasksTable
          TASK_ASSIGNMENT_NOTIFICATION_TOPIC_ARN: !Ref TaskAssignmentNotificationTopic
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TaskAssignmentQueue.Arn
            BatchSize: 1
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt TaskAssignmentNotificationTopic.TopicName

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction/
      Handler: helloworld.TaskStatusUpdateHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
          TASK_COMPLETE_NOTIFICATION_TOPIC_ARN: !Ref TaskCompleteNotificationTopic
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt TaskCompleteNotificationTopic.TopicName

  ReassignTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction/
      Handler: helloworld.TaskReassignmentHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
          TASK_ASSIGNMENT_QUEUE_URL: !Ref TaskAssignmentQueue
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TaskAssignmentQueue.QueueName

  # ProcessExpiredTaskFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: lambdas/task/
  #     Handler: org.example.handlers.ProcessExpiredTaskHandler::handleRequest
  #     Runtime: java21
  #     Architectures:
  #       - x86_64
  #     MemorySize: 512
  #     Timeout: 30
  #     Environment:
  #       Variables:
  #         TASK_EXPIRATION_STEP_FUNCTION_ARN: !GetAtt TaskExpirationStepFunction.Arn
  #     Events:
  #       SQSEvent:
  #         Type: SQS
  #         Properties:
  #           Queue: !GetAtt ExpiredTasksQueue.Arn
  #           BatchSize: 1
  #     Policies:
  #       - StepFunctionsExecutionPolicy:
  #           StateMachineName: !GetAtt TaskExpirationStepFunction.Name

  # # EventBridge Scheduler Rule for Task Deadlines
  # TaskDeadlineScheduler:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: lambdas/scheduler/
  #     Handler: org.example.handlers.TaskDeadlineSchedulerHandler::handleRequest
  #     Runtime: java21
  #     Architectures:
  #       - x86_64
  #     MemorySize: 512
  #     Timeout: 30
  #     Environment:
  #       Variables:
  #         TASKS_TABLE: !Ref TasksTable
  #         TASK_DEADLINE_NOTIFICATION_TOPIC_ARN: !Ref TaskDeadlineNotificationTopic
  #         EXPIRED_TASKS_QUEUE_URL: !Ref ExpiredTasksQueue
  #     Policies:
  #       - DynamoDBCrudPolicy:
  #           TableName: !Ref TasksTable
  #       - SNSPublishMessagePolicy:
  #           TopicName: !GetAtt TaskDeadlineNotificationTopic.TopicName
  #       - SQSSendMessagePolicy:
  #           QueueName: !GetAtt ExpiredTasksQueue.QueueName

  # EventBridge Scheduler Role
  EventBridgeSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEventBridgeSchedulerExecutionPolicy
      # Policies:
      #   - PolicyName: InvokeLambdaPolicy
      #     PolicyDocument:
      #       Version: '2012-10-17'
      #       Statement:
      #         - Effect: Allow
      #           Action: lambda:InvokeFunction
      #           Resource: !GetAtt TaskDeadlineScheduler.Arn

Outputs:
  UsersTableName:
    Description: "DynamoDB Table for Users"
    Value: !Ref UsersTable

  TasksTableName:
    Description: "DynamoDB Table for Tasks"
    Value: !Ref TasksTable

  TaskAssignmentQueueUrl:
    Description: "SQS Queue URL for Task Assignments"
    Value: !Ref TaskAssignmentQueue

  ExpiredTasksQueueUrl:
    Description: "SQS Queue URL for Expired Tasks"
    Value: !Ref ExpiredTasksQueue

  TaskAssignmentNotificationTopicArn:
    Description: "SNS Topic ARN for Task Assignment Notifications"
    Value: !Ref TaskAssignmentNotificationTopic

  TaskDeadlineNotificationTopicArn:
    Description: "SNS Topic ARN for Task Deadline Notifications"
    Value: !Ref TaskDeadlineNotificationTopic

  ClosedTaskNotificationTopicArn:
    Description: "SNS Topic ARN for Closed Task Notifications"
    Value: !Ref ClosedTaskNotificationTopic

  TaskCompleteNotificationTopicArn:
    Description: "SNS Topic ARN for Task Complete Notifications"
    Value: !Ref TaskCompleteNotificationTopic

  UserOnboardingStepFunctionArn:
    Description: "Step Function ARN for User Onboarding"
    Value: !GetAtt UserOnboardingStepFunction.Arn

  # TaskExpirationStepFunctionArn:
  #   Description: "Step Function ARN for Task Expiration"
  #   Value: !GetAtt TaskExpirationStepFunction.Arn